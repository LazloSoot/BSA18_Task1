// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectStructure.Databases.MSSQL;

namespace ProjectStructure.Databases.MSSQL.Migrations
{
    [DbContext(typeof(MSSQLContext))]
    partial class MSSQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjectStructure.Domain.Crew", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("AddedDate");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Departure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Flight", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("AddedDate");

                    b.Property<DateTime>("ArrivalTime");

                    b.Property<string>("DeparturePoint")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Pilot", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<DateTime>("Birth");

                    b.Property<long?>("CrewId");

                    b.Property<int>("ExperienceYears")
                        .HasMaxLength(30);

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("CrewId")
                        .IsUnique()
                        .HasFilter("[CrewId] IS NOT NULL");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Plane", b =>
                {
                    b.Property<long>("Id");

                    b.Property<DateTime>("AddedDate");

                    b.Property<TimeSpan>("Lifetime");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<DateTime>("ReleaseDate");

                    b.Property<long?>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("ProjectStructure.Domain.PlaneType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<int>("Capacity")
                        .HasMaxLength(500);

                    b.Property<int>("CargoCapacity")
                        .HasMaxLength(10000);

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Id");

                    b.ToTable("PlaneTypes");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Stewardess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<DateTime>("Birth");

                    b.Property<long>("CrewId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true);

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.ToTable("Stewardesses");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Ticket", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedDate");

                    b.Property<long?>("FlightId");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<double>("Price");

                    b.Property<int>("Seat");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Crew", b =>
                {
                    b.HasOne("ProjectStructure.Domain.Departure")
                        .WithOne("Crew")
                        .HasForeignKey("ProjectStructure.Domain.Crew", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectStructure.Domain.Flight", b =>
                {
                    b.HasOne("ProjectStructure.Domain.Departure")
                        .WithOne("Flight")
                        .HasForeignKey("ProjectStructure.Domain.Flight", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectStructure.Domain.Pilot", b =>
                {
                    b.HasOne("ProjectStructure.Domain.Crew", "Crew")
                        .WithOne("Pilot")
                        .HasForeignKey("ProjectStructure.Domain.Pilot", "CrewId");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Plane", b =>
                {
                    b.HasOne("ProjectStructure.Domain.Departure")
                        .WithOne("Plane")
                        .HasForeignKey("ProjectStructure.Domain.Plane", "Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProjectStructure.Domain.PlaneType", "Type")
                        .WithMany("Planes")
                        .HasForeignKey("TypeId");
                });

            modelBuilder.Entity("ProjectStructure.Domain.Stewardess", b =>
                {
                    b.HasOne("ProjectStructure.Domain.Crew", "Crew")
                        .WithMany("Stewardesses")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProjectStructure.Domain.Ticket", b =>
                {
                    b.HasOne("ProjectStructure.Domain.Flight", "Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId");
                });
#pragma warning restore 612, 618
        }
    }
}
